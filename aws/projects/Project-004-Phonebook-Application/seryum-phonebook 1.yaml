AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Phonebook Application aims to create a phonebook application in Python and deployed as a web application with Flask on AWS Application Load Balancer with Auto Scaling Group of Elastic Compute Cloud (EC2) Instances and Relational Database Service (RDS) using AWS Cloudformation Service.
Parameters:
  VPC:
    Description: Please select your default VPC.
    Type: AWS::EC2::VPC::Id

  KeyPair:
    Description: Please select your keypair.
    Type: AWS::EC2::KeyPair::KeyName

  MyInstanceType:
    Description: Please select your instance type. 
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.nano
      - t3.micro
      - t3.nano
  
  MySubnets:
    Description: Please select your subnets.
    Type: List<AWS::EC2::Subnet::Id>


Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows HTTP (80) connections from anywhere for LB # Required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80 
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  EC2InstancesSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows HTTP (80) connections only from the security group of LB. # Required
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80 
          SourceSecurityGroupId: !GetAtt LBSecGroup.GroupId

  PhonebookLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0cff7528ff583bf9a
        InstanceType: !Ref MyInstanceType
        KeyName: !Ref KeyPair
        SecurityGroupIds:
          - !GetAtt EC2InstancesSecGroup.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags: 
              - Key: Name
                Value: !Sub ${AWS::StackName} phonebook stack
        UserData:
          Fn::Base64:
            !Sub 
              - |
                #! /bin/bash
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                
                FOLDER="https://raw.githubusercontent.com/seryum65/AWS-Lessons/master/aws/projects/Project-004-Phonebook-Application/"
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/phonebook-app.py" -L "$FOLDER"phonebook-app.py
                python3 /home/ec2-user/phonebook-app.py
              - MyDBURI: !GetAtt RDSDatabaseInstance.Endpoint.Address

  ApplicationLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt LBSecGroup.GroupId
      Subnets: !Ref MySubnets
      Type: application

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      LoadBalancerArn: !Ref  ApplicationLB
      Port: 80
      Protocol: HTTP

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs "" 
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref PhonebookLT
        Version: 1 # !GetAtt PhonebookLT.LatestVersionNumber
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs:
        - !Ref ALBTargetGroup
  
  RDSSecurityGroups:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        - CIDRIP: 0.0.0.0/0
        - EC2SecurityGroupId: !GetAtt EC2InstancesSecGroup.GroupId
      GroupDescription: Database security group # Required

  RDSDatabaseInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t2.micro # Required
      DBInstanceIdentifier: seryumdb
      DBName: clarusway_phonebook
      DBSecurityGroups:
        - !Ref RDSSecurityGroups
      Engine: MySQL
      EngineVersion: 8.0.19
      MasterUsername: admin
      MasterUserPassword: Semih6565
      Port: 3306
      PubliclyAccessible: true

Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt ApplicationLB.DNSName
    Description: Phonebook Application Load Balancer URL